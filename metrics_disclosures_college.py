# -*- coding: utf-8 -*-
"""Metrics-Disclosures-College.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1-vnXSyF5tjwTHPw6kZdkuFP57pdE0f8w

### Downloading Python libraries
"""

!pip install numpy
!pip install pandas
!pip install XlsxWriter
!pip install seaborn

"""### Importing Libraries

"""

import pandas as pd
import numpy as np
import seaborn as sns

cm = sns.light_palette("lightgreen", as_cmap=True)

"""### Add your file name here

"""

filename="Metrics - Disclosures - College.csv"

"""### Reading the file"""

df=pd.read_csv(filename)

df.head()

"""### Finding Uniques

"""

df['rank_invention_dups'] = df.groupby('Invention')['Invention'].rank(method='first')

df.style.background_gradient(cmap=cm, subset=pd.IndexSlice[:, ['rank_invention_dups']])

unique_records = df[df['rank_invention_dups']==1.000000]

unique_records.drop('rank_invention_dups', axis=1, inplace=True)

unique_records.head()

unique_records.shape

df.shape

unique_records['Invention'].nunique()

df['Invention'].nunique()

"""### Creating Pivot Table"""

table = pd.DataFrame(pd.pivot_table(data=df,index=['College'],values=['Invention'],aggfunc='count'))
table.reset_index(inplace=True)
table.rename(columns={'Invention':'#Inventions'}, inplace=True)
table
# OR
# df.groupby(['College'])['Invention'].count()

"""### Data Transformation for Final Report"""

colleges = ['Central Administration','Graduate College','Litigation Reserve','President Research Fund','UIC OTM',
            'UIC/Academic Affairs','UIC/Admin.-Dept.','UIC/Applied Health Sciences','UIC/Architecture and the Arts',
            'UIC/Business Administration','UIC/Center for Advance Design, Research and Exploration (CADRE)',
            'UIC/Center for Clinical and Translational Science (CCTS)','UIC/Chancellor','UIC/Dentistry','UIC/Education',
            'UIC/Engineering','UIC/Hospital','UIC/Innovation Center','UIC/Liberal Arts & Science','UIC/Nursing',
            'UIC/OVCR-UIC Research, Office of the Vice Chancellor','UIC/Pharmacy','UIC/Public Health','UIC/Social Work',
            'UIC/UIC School of Law (fka John Marshall Law School)','UIC/Urban Planning & Public Affairs',
            'UIC/Vice Chancellor for Student Affairs','Vice Chancellor for Student Affairs (UIC)','WCA','Engineering',
            'UIC/Medicine','UIC/Medicine/Rockford','UIC/Ophthalmology and Visual Science','UIC/Medicine/Peoria','(blank)']

listofzeros = [0] * 35

dummy=pd.DataFrame({'College':colleges,'#Inventions':listofzeros})
dummy

ff=pd.concat([table, dummy], axis=0, ignore_index=True)
ff=ff.groupby(['College'])['#Inventions'].sum()
ff=pd.DataFrame(ff)
ff.reset_index(inplace=True)
ff

ff['College']=ff['College'].map({'UIC/Medicine': 'Medicine (UIC, Rockford, Peoria, UIHealth)', 
                     'UIC/Medicine/Rockford': 'Medicine (UIC, Rockford, Peoria, UIHealth)',
                     'UIC/Medicine/Peoria':'Medicine (UIC, Rockford, Peoria, UIHealth)',
                     'UIC/Hospital': 'Medicine (UIC, Rockford, Peoria, UIHealth)',
                     'UIC/Applied Health Sciences':'Applied Heath Sciences',
                     'UIC/Architecture and the Arts':'Architecture and the Arts',
                     'UIC/Business Administration':'Business',
                     'UIC/Dentistry':'Dentistry',
                     'UIC/Education':'Education',
                     'UIC/Engineering':'Engineering',
                     'Engineering':'Engineering',
                     'UIC/Innovation Center':'Innovation Center',
                     'UIC/UIC School of Law (fka John Marshall Law School)':'Law',
                     'UIC/Liberal Arts & Science':'Liberal Arts & Science',
                     'UIC/Nursing':'Nursing',
                     'UIC/Pharmacy':'Pharmacy',
                     'UIC/Public Health':'Public Health',
                     'UIC/Social Work':'Social Work',
                     'UIC/Center for Clinical and Translational Science (CCTS)':'Center for Clinical and Translational Sciences (CCTS)',
                     'UIC/Vice Chancellor for Student Affairs':'OVCR-UIC Research, Office of the Vice Chancellor',
                     'Vice Chancellor for Student Affairs (UIC)':'OVCR-UIC Research, Office of the Vice Chancellor',
                     'Central Administration':'Central Administration',
                        'Graduate College':'Graduate College',
                        'Litigation Reserve':'Litigation Reserve',
                        'President Research Fund':'President Research Fund',
                        'UIC OTM':'UIC OTM',
                        'UIC/Academic Affairs':'UIC/Academic Affairs',
                        'UIC/Admin.-Dept.':'UIC/Admin.-Dept.',
                        'UIC/Center for Advance Design, Research and Exploration (CADRE)':'UIC/Center for Advance Design, Research and Exploration (CADRE)',
                        'UIC/Chancellor':'UIC/Chancellor',
                        'UIC/OVCR-UIC Research, Office of the Vice Chancellor':'UIC/OVCR-UIC Research, Office of the Vice Chancellor',
                        'UIC/Urban Planning & Public Affairs':'UIC/Urban Planning & Public Affairs',
                        'WCA':'WCA',
                        'UIC/Ophthalmology and Visual Science':'UIC/Ophthalmology and Visual Science',
                        '(blank)':'(blank)'
})
ff

ff=ff.groupby(['College'])['#Inventions'].sum()
ff=pd.DataFrame(ff)
ff.reset_index(inplace=True)
ff

ff_filtered=ff[~ff['College'].isin(['Central Administration','Graduate College','Litigation Reserve',
                            'President Research Fund','UIC OTM','UIC/Academic Affairs','UIC/Admin.-Dept.',
                            'UIC/Center for Advance Design, Research and Exploration (CADRE)','UIC/Chancellor',
                            'UIC/OVCR-UIC Research, Office of the Vice Chancellor','UIC/Urban Planning & Public Affairs',
                            'WCA','UIC/Ophthalmology and Visual Science'
                           ])]
ff_filtered=ff_filtered.loc[~((ff_filtered['College']=='(blank)') & (ff_filtered['#Inventions']==0))]
ff_filtered.reset_index(drop=True, inplace=True)
ff_filtered

ff_filtered.shape[0]

total=ff_filtered['#Inventions'].sum()

ff_filtered.loc[len(ff_filtered.index)] = ['Total', total] 
ff_filtered

# Create a Pandas Excel writer using XlsxWriter as the engine.
writer = pd.ExcelWriter('Output_'+filename[:-4]+'.xlsx', engine='xlsxwriter')

# Write each dataframe to a different worksheet. you could write different string like above if you want
df.to_excel(writer, sheet_name='Dataset', index=False)
unique_records.to_excel(writer, sheet_name='Unique', index=False)
ff_filtered.to_excel(writer, sheet_name='Final_Report', index=False)

# Close the Pandas Excel writer and output the Excel file.
writer.save()

"""### Your file has been saved as Output_(filename)

# Thank You
  --  Harsh Jain
"""

